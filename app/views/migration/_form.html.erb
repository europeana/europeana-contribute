<% with_options scope: 'contribute.campaigns.migration.form' do |i18n| %>
  <%= simple_form_for @contribution, url: { action: @contribution.persisted? ? :update : :create }, html: { 'data-local-storage-id': 'eu-migration', 'class': 'eu-ugc-form' }.merge(recaptcha_form_attributes), builder: Migration::FormBuilder do |contribution| %>
    <% unless current_user %><noscript><div><%= t('contribute.campaigns.migration.form.js_required') %></div></noscript><% end %>
    <%= contribution.simple_fields_for(:ore_aggregation) do |agg| %>
      <%= agg.simple_fields_for(:edm_aggregatedCHO) do |cho| %>
        <%= field_set_tag(i18n.t('legends.contributor')) do %>
          <%= cho.simple_fields_for(:dc_contributor_agent) do |contributor| %>
            <%= contributor.input(:foaf_name, required: true) %>
            <%= contribution.input(:age_confirm, as: :boolean, required: true, boolean_style: :inline, label_input_html: { class: 'positioned-right' }, input_html: { 'data-error-msg-key': 'global.forms.validation-errors.user-age' }) %>
            <%= contributor.input(:skos_prefLabel, required: true, input_html: { 'data-copies': 'contribution_ore_aggregation_attributes_edm_aggregatedCHO_attributes_dc_contributor_agent_attributes_foaf_name_0', 'data-copies-label-key': 'site.ugc.actions.copy-name'}) %>
            <%= contributor.input(:foaf_mbox, as: :email, required: true) %>
          <% end %>
          <% if current_user.present? %>
            <%= cho.association(:edm_wasPresentAt, include_blank: :translate) %>
            <%= cho.input(:dc_identifier, wrapper_html: { 'data-requires': 'contribution_ore_aggregation_attributes_edm_aggregatedCHO_attributes_edm_wasPresentAt_id' }) %>
          <% end %>
          <%= contribution.input(:guardian_consent, as: :boolean, required: true,  boolean_style: :inline, label_input_html: { class: 'positioned-right' }, input_html: {'data-error-msg-key': 'global.forms.validation-errors.user-age-consent', 'data-makes-optional': 'contribution_age_confirm'}, wrapper_html: { 'data-requires-override': 'contribution_age_confirm', 'data-requires': 'contribution_ore_aggregation_attributes_edm_aggregatedCHO_attributes_edm_wasPresentAt_id' })%>
        <% end %>

        <%= field_set_tag(i18n.t('legends.contribution')) do %>
          <%= cho.input(:dc_language, as: :select, required: true, collection: EDM::ProvidedCHO.dc_language_enum) %>
          <%= cho.input(:dc_title, required: true) %>
          <%= cho.input(:dc_description, as: :text, required: true, input_html: { rows: 10 }) %>
          <%= cho.input(:dc_subject, as: :autocomplete, url: vocabularies_unesco_path, param: 'q', input_html: { 'data-deref-url': vocabularies_unesco_dereference_path }) %>
          <%= cho.input(:dcterms_spatial, as: :autocomplete, url: vocabularies_europeana_places_path, param: 'q', input_html: { 'data-deref-url': vocabularies_europeana_places_dereference_path }) %>
        <% end %>

        <%= field_set_tag(i18n.t('legends.subject_agent')) do %>
          <%= cho.nested_fields_for(:dc_subject_agents, wrapper_tag: :div) do |subject| %>
            <%= field_set_tag(nil, class: 'media-items') do %>
              <%= subject.remove_nested_fields_link(i18n.t('buttons.agent.remove')) %>
              <%# TODO: nested_fields_for does not use simple_form/our form builder's scoped I18n lookups %>
              <%= subject.input(:foaf_name, label: i18n.t('labels.edm_aggregatedCHO.dc_subject_agents.foaf_name'), input_html: { 'data-copies': 'contribution_ore_aggregation_attributes_edm_aggregatedCHO_attributes_dc_contributor_agent_attributes_skos_prefLabel', 'data-copies-label-key': 'site.ugc.actions.copy-public-display-name'}) %>
            <% end %>
          <% end %>
          <%= cho.add_nested_fields_link(:dc_subject_agents, i18n.t('buttons.agent.add')) %>
        <% end %>
      <% end %>

      <h2 class="legend"><%= i18n.t('legends.all_objects') %></h2>

      <%= field_set_tag nil, class: 'media-items' do %>
        <%# TODO: create a partial for web resource object fields %>
        <%= field_set_tag do %>
          <%= agg.simple_fields_for(:edm_isShownBy) do |wr| %>
            <%= wr.input(:media, label: i18n.t('legends.each_object', number: 1), input_html: { accept: "#{EDM::WebResource.allowed_extensions}, #{EDM::WebResource.allowed_content_types}", 'data-makes-required': 'contribution_ore_aggregation_edm_isShownBy_edm_rights_id', 'data-max-bytes': EDM::WebResource.max_media_size }) %>
            <%= wr.input(:media_cache, as: :hidden, input_html: { 'data-makes-required': 'contribution_ore_aggregation_edm_isShownBy_edm_rights_id' }) %>
            <% if wr.object.media? %>
              <div class="cf">
                <div class="media-preview">
                  <%= image_tag(wr.object.media_url) %>
                  <%= wr.input(:remove_media, as: :boolean) %>
                </div>
              </div>
            <% end %>
            <%= wr.input(:dc_description) %>
            <%= wr.input(:dc_type, as: :autocomplete, url: vocabularies_europeana_contribute_getty_aat_path, param: 'q', input_html: { 'data-deref-url': vocabularies_europeana_contribute_getty_aat_dereference_path }) %>
            <%= wr.input(:dcterms_created, as: :date, html5: true, input_html: date_format_fallback_attributes) %>
            <%= wr.input(:dc_creator) %>
            <%= wr.input(:edm_rights_id, as: :radio_buttons, collection: edm_rights_options, item_wrapper_class: 'license-radio-option', wrapper_html: { class: 'license-radios', 'data-error-msg-key': 'contribute.campaigns.migration.form.validation.web-resource-license' }, label_input_html: { 'class': 'license-section' }) %>
          <% end %>
        <% end %>

        <%= agg.nested_fields_for(:edm_hasViews, wrapper_tag: :div) do |wr| %>
          <%= field_set_tag do %>
            <%= wr.remove_nested_fields_link(i18n.t('buttons.object.remove')) %>
            <%= wr.input(:media, label: i18n.t('legends.each_object', number: ''), label_html: { class: 'sequenced_object' }, hint: i18n.t('hints.edm_hasView.media'), input_html: { accept: "#{EDM::WebResource.allowed_extensions}, #{EDM::WebResource.allowed_content_types}", 'data-makes-required': 'contribution_ore_aggregation_edm_hasViews___nested_field_for_replace_with_index___edm_rights_id', 'data-max-bytes': EDM::WebResource.max_media_size }) %>
            <%= wr.input(:media_cache, as: :hidden, 'data-makes-required': "contribution_ore_aggregation_edm_hasViews___nested_field_for_replace_with_index___edm_rights_id") %>
            <% if wr.object.media? %>
              <div class="cf">
                <div class="media-preview">
                  <%= image_tag(wr.object.media_url) %>
                  <%= wr.input(:remove_media, as: :boolean) %>
                </div>
              </div>
            <% end %>
            <%= wr.input(:dc_description) %>
            <%= wr.input(:dc_type, as: :autocomplete, url: vocabularies_europeana_contribute_getty_aat_path, param: 'q', input_html: { 'data-deref-url': vocabularies_europeana_contribute_getty_aat_dereference_path }) %>
            <%= wr.input(:dcterms_created, as: :date, html5: true, input_html: date_format_fallback_attributes) %>
            <%= wr.input(:dc_creator) %>
            <%= wr.input(:edm_rights_id, as: :radio_buttons, collection: edm_rights_options, item_wrapper_class: 'license-radio-option', wrapper_html: { class: 'license-radios', 'data-error-msg-key': 'contribute.campaigns.migration.form.validation.web-resource-license' }, label_input_html: { 'class': 'license-section' }) %>
          <% end %>
        <% end %>
        <%= agg.add_nested_fields_link(:edm_hasViews, i18n.t('buttons.object.add')) %>
      <% end %>
      <%= contribution.input(:content_policy_accept, label: i18n.t('labels.contribution.content_policy_accept', href: '//www.europeana.eu/portal/rights/contributions.html').html_safe, as: :boolean, required: true,  boolean_style: :inline, label_input_html: { class: 'full-width' }, input_html: { 'data-error-msg-key': 'contribute.campaigns.migration.form.validation.content-policy-accept' })%>
      <%= contribution.input(:display_and_takedown_accept, label: i18n.t('labels.contribution.display_and_takedown_accept', email: 'notice@europeana.eu').html_safe, as: :boolean, required: true,  boolean_style: :inline, label_input_html: { class: 'full-width' }, input_html: { 'data-error-msg-key': 'contribute.campaigns.migration.form.validation.display-and-takedown-accept' })%>
    <% end %>

    <%= contribution_state_change_input(contribution, @permitted_aasm_events, @selected_aasm_event) %>

    <span class="required-fields-hint"><%= t('global.forms.hints.required-fields') %></span>
    <span class="error global hidden"><%= t('global.forms.validation-errors.form-has-errors') %></span>
    <%= contribution.button(:submit, t('contribute.helpers.submit.contribution.create'), class: 'alt') %>
  <% end %>
<% end %>
