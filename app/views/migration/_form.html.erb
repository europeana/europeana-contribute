<% with_options scope: 'site.campaigns.migration.form' do |i18n| %>
  <%= simple_form_for @story, url: { action: @story.persisted? ? :update : :create }, html: { 'data-local-storage-id': 'eu-migration', 'class': 'eu-ugc-form' }.merge(recaptcha_form_attributes), builder: Migration::FormBuilder do |story| %>
    <%= story.simple_fields_for(:ore_aggregation) do |agg| %>
      <%= agg.simple_fields_for(:edm_aggregatedCHO) do |cho| %>
        <%= field_set_tag(i18n.t('legends.contributor')) do %>
          <%= cho.simple_fields_for(:dc_contributor_agent) do |contributor| %>
            <%= contributor.input(:foaf_name, required: true) %>
            <div class="input">
              <div class="label-and-input positioned-right">
                <input type="checkbox" id="age-confirm" name="age-confirm" data-error-msg-key="global.forms.validation-errors.user-age" required/>
                <label for="age-confirm">
                  <%= i18n.t('age-confirm') %>
                  <abbr title="required">*</abbr>
                </label>
              </div>
            </div>
            <%= contributor.input(:skos_prefLabel, required: true, input_html: { 'data-copies': 'story_ore_aggregation_attributes_edm_aggregatedCHO_attributes_dc_contributor_agent_attributes_foaf_name', 'data-copies-label-key': 'site.ugc.actions.copy-name'}) %>
            <%= contributor.input(:foaf_mbox, as: :email, required: true) %>
          <% end %>
          <%= cho.association(:edm_wasPresentAt, include_blank: :translate) %>
          <%= cho.input(:dc_identifier, input_html: { 'data-requires': 'story_ore_aggregation_attributes_edm_aggregatedCHO_attributes_edm_wasPresentAt_id' }) %>
          <div class="input">
            <div class="label-and-input positioned-right">
              <input type="checkbox" id="age-consent-confirm" required data-makes-optional="age-confirm" data-requires-override="age-confirm" data-requires="story_ore_aggregation_attributes_edm_aggregatedCHO_attributes_edm_wasPresentAt_id"/>
              <label for="age-consent-confirm">
                <%= i18n.t('age-consent-confirm') %>
                <abbr title="required">*</abbr>
              </label>
            </div>
          </div>
        <% end %>
        <%= field_set_tag(i18n.t('legends.story')) do %>
          <%= cho.input(:dc_language, as: :select, required: true, collection: EDM::ProvidedCHO.dc_language_enum) %>
          <%= cho.input(:dc_title, required: true) %>
          <%= cho.input(:dc_description, as: :text, required: true, input_html: { rows: 10 }) %>
          <%= cho.input(:dc_subject, as: :autocomplete, url: vocabularies_unesco_path, param: 'q', input_html: { 'data-deref-url': vocabularies_unesco_dereference_path }) %>
          <%= cho.simple_fields_for(:dcterms_spatial_places) do |place| %>
            <%= place.input(:owl_sameAs, as: :autocomplete, url: vocabularies_europeana_places_path, param: 'q', label: i18n.t('labels.edm_aggregatedCHO.dcterms_spatial_places.owl_sameAs.' + (place.object == cho.object.dcterms_spatial_places.first ? 'begin' : 'end')), input_html: { 'data-deref-url': vocabularies_europeana_places_dereference_path } ) %>
          <% end %>
          <%= cho.nested_fields_for(:dc_subject_agents, wrapper_tag: :div) do |subject| %>
            <%= field_set_tag(i18n.t('legends.subject_agent'), class: 'media-items') do %>
              <%= subject.remove_nested_fields_link(i18n.t('buttons.agent.remove')) %>
              <%# TODO: nested_fields_for does not use simple_form/our form builder's scoped I18n lookups %>
              <%= subject.input(:foaf_name, label: i18n.t('labels.edm_aggregatedCHO.dc_subject_agents.foaf_name'), input_html: { 'data-copies': 'story_ore_aggregation_attributes_edm_aggregatedCHO_attributes_dc_contributor_agent_attributes_foaf_name', 'data-copies-label-key': 'site.ugc.actions.copy-public-display-name'}) %>
              <%= subject.input(:rdaGr2_dateOfBirth, as: :date, html5: true, input_html: date_format_fallback_attributes) %>
              <%= subject.input(:rdaGr2_placeOfBirth, as: :autocomplete, url: vocabularies_europeana_places_path, param: 'q', input_html: { 'data-deref-url': vocabularies_europeana_places_dereference_path }) %>
              <%= subject.input(:rdaGr2_dateOfDeath, as: :date, html5: true, input_html: date_format_fallback_attributes) %>
              <%= subject.input(:rdaGr2_placeOfDeath, as: :autocomplete, url: vocabularies_europeana_places_path, param: 'q', input_html: { 'data-deref-url': vocabularies_europeana_places_dereference_path }) %>
            <% end %>
          <% end %>
          <%= cho.add_nested_fields_link(:dc_subject_agents, i18n.t('buttons.agent.add')) %>
        <% end %>
      <% end %>

      <h2 class="legend"><%= i18n.t('legends.all_objects') %></h2>

      <%= field_set_tag nil, class:'media-items' do %>
        <%# TODO: create a partial for web resource object fields %>
        <%= field_set_tag do %>
          <%= agg.simple_fields_for(:edm_isShownBy) do |wr| %>
            <%= wr.input(:media, label: i18n.t('legends.each_object', number: 1), input_html: { accept: "#{EDM::WebResource.allowed_extensions}, #{EDM::WebResource.allowed_content_types}" }) %>
            <%= wr.input(:media_cache, as: :hidden) %>
            <% if wr.object.media? %>
              <div class="cf">
                <div class="media-preview">
                  <%= image_tag(wr.object.media_url) %>
                  <%= wr.input(:remove_media, as: :boolean) %>
                </div>
              </div>
            <% end %>
            <%= wr.input(:dc_description) %>
            <%= wr.input(:dc_type) %>
            <%= wr.input(:dcterms_created, as: :date, html5: true, input_html: date_format_fallback_attributes) %>
            <%= wr.simple_fields_for(:dc_creator_agent) do |creator| %>
              <%= creator.input(:foaf_name) %>
            <% end %>
          <% end %>
        <% end %>

        <%= agg.nested_fields_for(:edm_hasViews, wrapper_tag: :div) do |wr| %>
          <%= field_set_tag do %>
            <%= wr.remove_nested_fields_link(i18n.t('buttons.object.remove')) %>
            <%= wr.input(:media, label: i18n.t('legends.each_object', number: ''), label_html: { class: 'sequenced_object' }, hint: i18n.t('hints.edm_hasView.media'), input_html: { accept: "#{EDM::WebResource.allowed_extensions}, #{EDM::WebResource.allowed_content_types}" }) %>
            <%= wr.input(:media_cache, as: :hidden) %>
            <% if wr.object.media? %>
              <div class="cf">
                <div class="media-preview">
                  <%= image_tag(wr.object.media_url) %>
                  <%= wr.input(:remove_media, as: :boolean) %>
                </div>
              </div>
            <% end %>
            <%= wr.input(:dc_description) %>
            <%= wr.input(:dc_type) %>
            <%= wr.input(:dcterms_created, as: :date, html5: true, input_html: date_format_fallback_attributes) %>
            <%= wr.simple_fields_for(:dc_creator_agent) do |creator| %>
              <%= creator.input(:foaf_name) %>
            <% end %>
          <% end %>
        <% end %>
        <%= agg.add_nested_fields_link(:edm_hasViews, i18n.t('buttons.object.add')) %>
      <% end %>
    <% end %>

    <span class="required-fields-hint"><%= t('global.forms.hints.required-fields') %></span>
    <%= story.button(:submit) %>
  <% end %>
<% end %>
